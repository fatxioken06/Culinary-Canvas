# Generated by Django 5.2.6 on 2025-09-15 12:44

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('title_en', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('title_uz', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('description_en', models.TextField(null=True, verbose_name='Description')),
                ('description_uz', models.TextField(null=True, verbose_name='Description')),
                ('description_ru', models.TextField(null=True, verbose_name='Description')),
                ('ingredients', models.TextField(help_text='Each ingredient on a new line', verbose_name='Ingredients')),
                ('ingredients_en', models.TextField(help_text='Each ingredient on a new line', null=True, verbose_name='Ingredients')),
                ('ingredients_uz', models.TextField(help_text='Each ingredient on a new line', null=True, verbose_name='Ingredients')),
                ('ingredients_ru', models.TextField(help_text='Each ingredient on a new line', null=True, verbose_name='Ingredients')),
                ('instructions', models.TextField(verbose_name='Instructions')),
                ('instructions_en', models.TextField(null=True, verbose_name='Instructions')),
                ('instructions_uz', models.TextField(null=True, verbose_name='Instructions')),
                ('instructions_ru', models.TextField(null=True, verbose_name='Instructions')),
                ('image', models.ImageField(blank=True, null=True, upload_to='recipes/%Y/%m/%d/', verbose_name='Image')),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='easy', max_length=10, verbose_name='Difficulty')),
                ('prep_time', models.PositiveIntegerField(default=0, verbose_name='Preparation time (minutes)')),
                ('cook_time', models.PositiveIntegerField(default=0, verbose_name='Cooking time (minutes)')),
                ('servings', models.PositiveIntegerField(default=1, verbose_name='Servings')),
                ('is_draft', models.BooleanField(default=True, verbose_name='Is draft')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is featured')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='categories.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('review', models.TextField(blank=True, verbose_name='Review')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dishes.recipe', verbose_name='Recipe')),
            ],
            options={
                'verbose_name': 'Rating',
                'verbose_name_plural': 'Ratings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Content')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dishes.comment', verbose_name='Parent comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dishes.recipe', verbose_name='Recipe')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['slug'], name='dishes_reci_slug_fa75c9_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['is_draft', 'created_at'], name='dishes_reci_is_draf_07c64c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('recipe', 'user')},
        ),
    ]
